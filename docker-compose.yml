version: '3'
services:
    laravel.test:
        build:
            context: ./vendor/laravel/sail/runtimes/8.2
            #context: ./docker/8.2
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.2/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - pgsql

    laravel_queue_worker:
        build:
            context: ./vendor/laravel/sail/runtimes/8.2
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.2/app
        command: php /var/www/html/artisan queue:work --timeout=30000
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - laravel.test
            - pgsql
            - redis
        restart: always

    pgsql:
        image: 'kartoza/postgis:15-3.3'
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            # If you need to create multiple database you can add coma separated databases eg gis,data
            - POSTGRES_DB=${DB_DATABASE}
            - POSTGRES_USER=${DB_USERNAME}
            - POSTGRES_PASS=${DB_PASSWORD:-secret}
            - ALLOW_IP_RANGE=0.0.0.0/0
            # Add extensions you need to be enabled by default in the DB. Default are the five specified below
            - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
            - RUN_AS_ROOT=false
            - PASSWORD_AUTHENTICATION=md5
        volumes:
            - 'sail-pgsql:/var/lib/postgresql/data'
        networks:
            - sail


    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s

    pygeoapi:
        image: "geopython/pygeoapi:0.15.0"
        volumes:
            - "./pygeoapi.config.dev.yml:/pygeoapi/local.config.yml"
        env_file:
            - ".env"
        ports:
            - "5011:80"
        networks:
            - sail
        depends_on:
            - pgsql
        restart: always


networks:
    sail:
        driver: bridge
volumes:
    sail-pgsql:
        driver: local
    sail-redis:
        driver: local
